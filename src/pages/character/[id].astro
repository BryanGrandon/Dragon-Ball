---
import { transformer } from 'astro:schema'
import Layout from '../../layouts/Layout.astro'
import { getCharacters, getCharacterForId } from '../../services/dragonBall'
import CharacterCard from '../../components/CharacterCard.astro'
import Tag from '../../components/Tag.astro'

export async function getStaticPaths() {
  const characters = await getCharacters()
  return characters.map(({ id }) => ({
    params: { id: id.toString() },
  }))
}

const { id } = Astro.params

const data = await getCharacterForId(`${id}`)
const { name, image, ki, maxKi, race, description, transformations, originPlanet, gender } = data
---

<Layout title={`Character`}>
  <header>
    <h1 class='text-4xl'>{name}</h1>
  </header>
  <main class='max-width p-4 grid'>
    <article class='grid grid-cols-1 lg:grid-cols-[20rem_2.5fr] lg:gap-8'>
      <section class='grid grid-cols-1 sm:grid-cols-[20rem_2.5fr] lg:flex lg:flex-col gap-8'>
        <section
          class='p-10 justify-center rounded-xl bg-[url("https://c.wallhere.com/photos/b9/00/Dragon_Ball_Fortnite-2157419.jpg!d")] bg-cover bg-start overlay overflow-hidden shadow-md shadow-black'
        >
          <img src={image} alt={`img-${name}`} class='h-full object-contain max-h-85 relative m-auto' />
        </section>
        <section class='flex flex-col gap-2 p-4'>
          <Tag text='Race:' highlight={race} />
          <Tag text='Gender:' highlight={gender} />
          <Tag text='Origin Planet:' highlight={originPlanet.name} />
          <Tag text='Ki:' highlight={ki} />
          <Tag text='Max Ki:' highlight={maxKi} />
        </section>
      </section>
      <article class='prose-lg dark:prose-invert'>
        <section>
          <h2>Description</h2>
          <p>{description}</p>
        </section>

        <section>
          <h2>Origin Planet: {originPlanet.name}</h2>
          <p>{originPlanet.description}</p>
        </section>

        {
          transformations.length !== 0 ? (
            <article>
              <h2>Transformations</h2>
              <section class='grid grid-cols-[repeat(auto-fill,_minmax(14rem,_1fr))] gap-4 not-prose'>
                {transformations.map((transformation) => (
                  <CharacterCard name={transformation.name} ki={transformation.ki} image={transformation.image} id={id} />
                ))}
              </section>
            </article>
          ) : null
        }
      </article>
    </article>
  </main>
</Layout>

<style></style>
